{"ast":null,"code":"import _objectSpread from\"D:/GIT/Diploma_TMS/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import{ACTIONS}from\"./constans\";var defaultState={userDataForPaymentCost:{dayOfWeek:\"\",distance:\"\",hasEquip:null},dbDataForPaymentCost:{cost:0,road:0,withEquip:null},dataForPayment:{wasPayment:false,finallyCost:0}};export var costReducer=function costReducer(){var state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:defaultState;var action=arguments.length>1?arguments[1]:undefined;switch(action.type){case ACTIONS.GET_DATA_USERS_COST:var userDataForPaymentCost={dayOfWeek:action.costData.dayOfWeek,distance:+action.costData.distance,hasEquip:action.costData.hasEquip};return _objectSpread(_objectSpread({},state),{},{userDataForPaymentCost:userDataForPaymentCost});case ACTIONS.GET_DATA_DB_COST:return _objectSpread(_objectSpread({},state),{},{dbDataForPaymentCost:action.paymentCostDb});case ACTIONS.PAYMENT_BAND_COST:return _objectSpread({},state);case ACTIONS.SET_BAND_COST:var db=state.dbDataForPaymentCost;var user=state.userDataForPaymentCost;var finallyCost=db.cost+user.distance*db.road+(!user.hasEquip?db.withEquip:0)+(user.dayOfWeek===5||user.dayOfWeek===6?100:0);var dataForPayment={wasPayment:true,finallyCost:finallyCost};return _objectSpread(_objectSpread({},state),{},{dataForPayment:dataForPayment});case ACTIONS.CHANGE_WAS_PAYMENT:{var _dataForPayment={wasPayment:false,finallyCost:0};return _objectSpread(_objectSpread({},state),{},{dataForPayment:_dataForPayment});}default:return state;}};","map":{"version":3,"sources":["D:/GIT/Diploma_TMS/src/redux/reducers/costReducer.js"],"names":["ACTIONS","defaultState","userDataForPaymentCost","dayOfWeek","distance","hasEquip","dbDataForPaymentCost","cost","road","withEquip","dataForPayment","wasPayment","finallyCost","costReducer","state","action","type","GET_DATA_USERS_COST","costData","GET_DATA_DB_COST","paymentCostDb","PAYMENT_BAND_COST","SET_BAND_COST","db","user","CHANGE_WAS_PAYMENT"],"mappings":"wIAAA,OAASA,OAAT,KAAwB,YAAxB,CAEA,GAAMC,CAAAA,YAAY,CAAG,CACnBC,sBAAsB,CAAE,CACtBC,SAAS,CAAE,EADW,CAEtBC,QAAQ,CAAE,EAFY,CAGtBC,QAAQ,CAAE,IAHY,CADL,CAMnBC,oBAAoB,CAAE,CACpBC,IAAI,CAAE,CADc,CAEpBC,IAAI,CAAE,CAFc,CAGpBC,SAAS,CAAE,IAHS,CANH,CAWnBC,cAAc,CAAE,CACdC,UAAU,CAAE,KADE,CAEdC,WAAW,CAAE,CAFC,CAXG,CAArB,CAiBA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,EAAkC,IAAjCC,CAAAA,KAAiC,2DAAzBb,YAAyB,IAAXc,CAAAA,MAAW,2CAC3D,OAAQA,MAAM,CAACC,IAAf,EACE,IAAKhB,CAAAA,OAAO,CAACiB,mBAAb,CACE,GAAIf,CAAAA,sBAAsB,CAAG,CAC3BC,SAAS,CAAEY,MAAM,CAACG,QAAP,CAAgBf,SADA,CAE3BC,QAAQ,CAAE,CAACW,MAAM,CAACG,QAAP,CAAgBd,QAFA,CAG3BC,QAAQ,CAAEU,MAAM,CAACG,QAAP,CAAgBb,QAHC,CAA7B,CAKA,sCAAYS,KAAZ,MAAmBZ,sBAAsB,CAAtBA,sBAAnB,GACF,IAAKF,CAAAA,OAAO,CAACmB,gBAAb,CACE,sCAAYL,KAAZ,MAAmBR,oBAAoB,CAAES,MAAM,CAACK,aAAhD,GACF,IAAKpB,CAAAA,OAAO,CAACqB,iBAAb,CACE,wBAAYP,KAAZ,EACF,IAAKd,CAAAA,OAAO,CAACsB,aAAb,CACE,GAAIC,CAAAA,EAAE,CAAGT,KAAK,CAACR,oBAAf,CACA,GAAIkB,CAAAA,IAAI,CAAGV,KAAK,CAACZ,sBAAjB,CACA,GAAIU,CAAAA,WAAW,CACbW,EAAE,CAAChB,IAAH,CACAiB,IAAI,CAACpB,QAAL,CAAgBmB,EAAE,CAACf,IADnB,EAEC,CAACgB,IAAI,CAACnB,QAAN,CAAiBkB,EAAE,CAACd,SAApB,CAAgC,CAFjC,GAGCe,IAAI,CAACrB,SAAL,GAAmB,CAAnB,EAAwBqB,IAAI,CAACrB,SAAL,GAAmB,CAA3C,CAA+C,GAA/C,CAAqD,CAHtD,CADF,CAKA,GAAIO,CAAAA,cAAc,CAAG,CAAEC,UAAU,CAAE,IAAd,CAAoBC,WAAW,CAAXA,WAApB,CAArB,CACA,sCAAYE,KAAZ,MAAmBJ,cAAc,CAAdA,cAAnB,GACF,IAAKV,CAAAA,OAAO,CAACyB,kBAAb,CAAiC,CAC/B,GAAIf,CAAAA,eAAc,CAAG,CAAEC,UAAU,CAAE,KAAd,CAAqBC,WAAW,CAAE,CAAlC,CAArB,CACA,sCAAYE,KAAZ,MAAmBJ,cAAc,CAAdA,eAAnB,GACD,CACD,QACE,MAAOI,CAAAA,KAAP,CA3BJ,CA6BD,CA9BM","sourcesContent":["import { ACTIONS } from \"./constans\";\n\nconst defaultState = {\n  userDataForPaymentCost: {\n    dayOfWeek: \"\",\n    distance: \"\",\n    hasEquip: null,\n  },\n  dbDataForPaymentCost: {\n    cost: 0,\n    road: 0,\n    withEquip: null,\n  },\n  dataForPayment: {\n    wasPayment: false,\n    finallyCost: 0,\n  },\n};\n\nexport const costReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_DATA_USERS_COST:\n      let userDataForPaymentCost = {\n        dayOfWeek: action.costData.dayOfWeek,\n        distance: +action.costData.distance,\n        hasEquip: action.costData.hasEquip,\n      };\n      return { ...state, userDataForPaymentCost };\n    case ACTIONS.GET_DATA_DB_COST:\n      return { ...state, dbDataForPaymentCost: action.paymentCostDb };\n    case ACTIONS.PAYMENT_BAND_COST:\n      return { ...state };\n    case ACTIONS.SET_BAND_COST:\n      let db = state.dbDataForPaymentCost;\n      let user = state.userDataForPaymentCost;\n      let finallyCost =\n        db.cost +\n        user.distance * db.road +\n        (!user.hasEquip ? db.withEquip : 0) +\n        (user.dayOfWeek === 5 || user.dayOfWeek === 6 ? 100 : 0);\n      let dataForPayment = { wasPayment: true, finallyCost };\n      return { ...state, dataForPayment };\n    case ACTIONS.CHANGE_WAS_PAYMENT: {\n      let dataForPayment = { wasPayment: false, finallyCost: 0 };\n      return { ...state, dataForPayment };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}