{"ast":null,"code":"import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\n\nconst firebaseui = require(\"firebaseui\");\n\nexport const InitializeFirebase = () => {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBVg8nXDmrZr7925r3Dx-hjedFF2BjXYpk\",\n    authDomain: \"diploma-4c274.firebaseapp.com\",\n    databaseURL: \"https://diploma-4c274-default-rtdb.firebaseio.com\",\n    projectId: \"diploma-4c274\",\n    storageBucket: \"diploma-4c274.appspot.com\",\n    messagingSenderId: \"889247481727\",\n    appId: \"1:889247481727:web:4a58d9149c454f44c4644a\"\n  }; // Initialize Firebase\n\n  firebase.initializeApp(firebaseConfig);\n};\n_c = InitializeFirebase;\nexport async function getDatabase(base) {\n  const db = await firebase.database().ref(`${base}`).once(\"value\");\n  const paymentCostDb = await db.val();\n  return paymentCostDb;\n}\nexport async function removeItemDatabase(id, base) {\n  const db = await firebase.database().ref(`${base}/${id}`);\n  await db.remove();\n}\nexport async function setArrayInDatabase(arr, base) {\n  const db = await firebase.database().ref(`${base}`);\n  await db.set(arr);\n}\nexport async function addElDatabase(item, base) {\n  const db = await firebase.database().ref(`${base}`);\n  const newPoster = await db.push(item);\n}\nexport async function readDatabase(base) {\n  const db = await await firebase.database().ref(`${base}`).once(\"value\");\n  const responseDb = await db.val();\n  return responseDb;\n}\nexport async function initializeAuthAdmin(login, password) {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(`${login}`, `${password}`);\n    let authResponse;\n    await firebase.auth().onAuthStateChanged(user => user && (authResponse = user.uid));\n    return authResponse;\n  } catch (error) {\n    return error;\n  }\n}\nexport async function signOutAdmin() {\n  try {\n    await firebase.auth().signOut();\n  } catch (err) {\n    console.log(err);\n  }\n}\nexport async function checkOutOf() {\n  const userCurrent = await firebase.auth().currentUser;\n  return userCurrent ? userCurrent : \"user out\";\n}\nwindow.checkOutOf = checkOutOf;\nexport async function sendSignInLinkToEmail(email) {\n  try {\n    let actionCodeSettings = {\n      url: `http://localhost:3000/put-reviews/finishSignUp?cartId=1234`,\n      handleCodeInApp: true\n    };\n    window.localStorage.setItem(\"emailForSignIn\", email);\n    await firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings);\n  } catch (er) {\n    console.log(er);\n  }\n}\nexport async function singInAfterGetMail() {\n  try {\n    let storageEmail = window.localStorage.getItem(\"emailForSignIn\");\n    await firebase.auth().signInWithEmailLink(storageEmail, window.location.href);\n    window.localStorage.removeItem(\"emailForSignIn\");\n    checkOutOf();\n  } catch (er) {\n    console.log(er);\n  }\n}\nexport async function createUser(email, password) {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\n    signOutAdmin();\n  } catch (er) {\n    console.log(er); // ..\n  }\n}\nexport async function delleteUser() {\n  try {\n    const user = await firebase.auth().currentUser;\n    await user.delete();\n    await checkOutOf();\n  } catch (er) {\n    console.log(er);\n  }\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"InitializeFirebase\");","map":{"version":3,"sources":["D:/GIT/Diploma_TMS/src/redux/fireBaseFunctions.js"],"names":["firebase","firebaseui","require","InitializeFirebase","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","initializeApp","getDatabase","base","db","database","ref","once","paymentCostDb","val","removeItemDatabase","id","remove","setArrayInDatabase","arr","set","addElDatabase","item","newPoster","push","readDatabase","responseDb","initializeAuthAdmin","login","password","auth","signInWithEmailAndPassword","authResponse","onAuthStateChanged","user","uid","error","signOutAdmin","signOut","err","console","log","checkOutOf","userCurrent","currentUser","window","sendSignInLinkToEmail","email","actionCodeSettings","url","handleCodeInApp","localStorage","setItem","er","singInAfterGetMail","storageEmail","getItem","signInWithEmailLink","location","href","removeItem","createUser","createUserWithEmailAndPassword","delleteUser","delete"],"mappings":"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","sourcesContent":["import firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/database\";\n\nconst firebaseui = require(\"firebaseui\");\n\nexport const InitializeFirebase = () => {\n  const firebaseConfig = {\n    apiKey: \"AIzaSyBVg8nXDmrZr7925r3Dx-hjedFF2BjXYpk\",\n    authDomain: \"diploma-4c274.firebaseapp.com\",\n    databaseURL: \"https://diploma-4c274-default-rtdb.firebaseio.com\",\n    projectId: \"diploma-4c274\",\n    storageBucket: \"diploma-4c274.appspot.com\",\n    messagingSenderId: \"889247481727\",\n    appId: \"1:889247481727:web:4a58d9149c454f44c4644a\",\n  };\n\n  // Initialize Firebase\n  firebase.initializeApp(firebaseConfig);\n};\n\nexport async function getDatabase(base) {\n  const db = await firebase.database().ref(`${base}`).once(\"value\");\n  const paymentCostDb = await db.val();\n  return paymentCostDb;\n}\n\nexport async function removeItemDatabase(id, base) {\n  const db = await firebase.database().ref(`${base}/${id}`);\n  await db.remove();\n}\n\nexport async function setArrayInDatabase(arr, base) {\n  const db = await firebase.database().ref(`${base}`);\n  await db.set(arr);\n}\n\nexport async function addElDatabase(item, base) {\n  const db = await firebase.database().ref(`${base}`);\n  const newPoster = await db.push(item);\n}\n\nexport async function readDatabase(base) {\n  const db = await await firebase.database().ref(`${base}`).once(\"value\");\n  const responseDb = await db.val();\n  return responseDb;\n}\n\nexport async function initializeAuthAdmin(login, password) {\n  try {\n    await firebase.auth().signInWithEmailAndPassword(`${login}`, `${password}`);\n\n    let authResponse;\n    await firebase\n      .auth()\n      .onAuthStateChanged((user) => user && (authResponse = user.uid));\n    return authResponse;\n  } catch (error) {\n    return error;\n  }\n}\n\nexport async function signOutAdmin() {\n  try {\n    await firebase.auth().signOut();\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nexport async function checkOutOf() {\n  const userCurrent = await firebase.auth().currentUser;\n  return userCurrent ? userCurrent : \"user out\";\n}\nwindow.checkOutOf = checkOutOf;\n\nexport async function sendSignInLinkToEmail(email) {\n  try {\n    let actionCodeSettings = {\n      url: `http://localhost:3000/put-reviews/finishSignUp?cartId=1234`,\n\n      handleCodeInApp: true,\n    };\n    window.localStorage.setItem(\"emailForSignIn\", email);\n    await firebase.auth().sendSignInLinkToEmail(email, actionCodeSettings);\n  } catch (er) {\n    console.log(er);\n  }\n}\nexport async function singInAfterGetMail() {\n  try {\n    let storageEmail = window.localStorage.getItem(\"emailForSignIn\");\n    await firebase\n      .auth()\n      .signInWithEmailLink(storageEmail, window.location.href);\n    window.localStorage.removeItem(\"emailForSignIn\");\n    checkOutOf();\n  } catch (er) {\n    console.log(er);\n  }\n}\n\nexport async function createUser(email, password) {\n  try {\n    await firebase.auth().createUserWithEmailAndPassword(email, password);\n    signOutAdmin();\n  } catch (er) {\n    console.log(er);\n    // ..\n  }\n}\n\nexport async function delleteUser() {\n  try {\n    const user = await firebase.auth().currentUser;\n    await user.delete();\n    await checkOutOf();\n  } catch (er) {\n    console.log(er);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}