{"ast":null,"code":"import { ACTIONS } from \"./constans\";\nconst defaultState = {\n  userDataForPaymentCost: {\n    dayOfWeek: \"\",\n    distance: \"\",\n    hasEquip: null\n  },\n  dbDataForPaymentCost: {\n    cost: 0,\n    road: 0,\n    withEquip: null\n  },\n  dataForPayment: {\n    wasPayment: false,\n    finallyCost: 0\n  }\n};\nexport const costReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_DATA_USERS_COST:\n      let userDataForPaymentCost = {\n        dayOfWeek: action.costData.dayOfWeek,\n        distance: +action.costData.distance,\n        hasEquip: action.costData.hasEquip\n      };\n      return { ...state,\n        userDataForPaymentCost\n      };\n\n    case ACTIONS.GET_DATA_DB_COST:\n      return { ...state,\n        dbDataForPaymentCost: action.paymentCostDb\n      };\n\n    case ACTIONS.PAYMENT_BAND_COST:\n      return { ...state\n      };\n\n    case ACTIONS.SET_BAND_COST:\n      let db = state.dbDataForPaymentCost;\n      let user = state.userDataForPaymentCost;\n      let finallyCost = db.cost + user.distance * db.road + (!user.hasEquip ? db.withEquip : 0) + (user.dayOfWeek === 5 || user.dayOfWeek === 6 ? 100 : 0);\n      let dataForPayment = {\n        wasPayment: true,\n        finallyCost\n      };\n      return { ...state,\n        dataForPayment\n      };\n\n    case ACTIONS.CHANGE_WAS_PAYMENT:\n      {\n        let dataForPayment = {\n          wasPayment: false,\n          finallyCost: 0\n        };\n        return { ...state,\n          dataForPayment\n        };\n      }\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["D:/GIT/Diploma_TMS/src/redux/reducers/costReducer.js"],"names":["ACTIONS","defaultState","userDataForPaymentCost","dayOfWeek","distance","hasEquip","dbDataForPaymentCost","cost","road","withEquip","dataForPayment","wasPayment","finallyCost","costReducer","state","action","type","GET_DATA_USERS_COST","costData","GET_DATA_DB_COST","paymentCostDb","PAYMENT_BAND_COST","SET_BAND_COST","db","user","CHANGE_WAS_PAYMENT"],"mappings":"AAAA,SAASA,OAAT,QAAwB,YAAxB;AAEA,MAAMC,YAAY,GAAG;AACnBC,EAAAA,sBAAsB,EAAE;AACtBC,IAAAA,SAAS,EAAE,EADW;AAEtBC,IAAAA,QAAQ,EAAE,EAFY;AAGtBC,IAAAA,QAAQ,EAAE;AAHY,GADL;AAMnBC,EAAAA,oBAAoB,EAAE;AACpBC,IAAAA,IAAI,EAAE,CADc;AAEpBC,IAAAA,IAAI,EAAE,CAFc;AAGpBC,IAAAA,SAAS,EAAE;AAHS,GANH;AAWnBC,EAAAA,cAAc,EAAE;AACdC,IAAAA,UAAU,EAAE,KADE;AAEdC,IAAAA,WAAW,EAAE;AAFC;AAXG,CAArB;AAiBA,OAAO,MAAMC,WAAW,GAAG,CAACC,KAAK,GAAGb,YAAT,EAAuBc,MAAvB,KAAkC;AAC3D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKhB,OAAO,CAACiB,mBAAb;AACE,UAAIf,sBAAsB,GAAG;AAC3BC,QAAAA,SAAS,EAAEY,MAAM,CAACG,QAAP,CAAgBf,SADA;AAE3BC,QAAAA,QAAQ,EAAE,CAACW,MAAM,CAACG,QAAP,CAAgBd,QAFA;AAG3BC,QAAAA,QAAQ,EAAEU,MAAM,CAACG,QAAP,CAAgBb;AAHC,OAA7B;AAKA,aAAO,EAAE,GAAGS,KAAL;AAAYZ,QAAAA;AAAZ,OAAP;;AACF,SAAKF,OAAO,CAACmB,gBAAb;AACE,aAAO,EAAE,GAAGL,KAAL;AAAYR,QAAAA,oBAAoB,EAAES,MAAM,CAACK;AAAzC,OAAP;;AACF,SAAKpB,OAAO,CAACqB,iBAAb;AACE,aAAO,EAAE,GAAGP;AAAL,OAAP;;AACF,SAAKd,OAAO,CAACsB,aAAb;AACE,UAAIC,EAAE,GAAGT,KAAK,CAACR,oBAAf;AACA,UAAIkB,IAAI,GAAGV,KAAK,CAACZ,sBAAjB;AACA,UAAIU,WAAW,GACbW,EAAE,CAAChB,IAAH,GACAiB,IAAI,CAACpB,QAAL,GAAgBmB,EAAE,CAACf,IADnB,IAEC,CAACgB,IAAI,CAACnB,QAAN,GAAiBkB,EAAE,CAACd,SAApB,GAAgC,CAFjC,KAGCe,IAAI,CAACrB,SAAL,KAAmB,CAAnB,IAAwBqB,IAAI,CAACrB,SAAL,KAAmB,CAA3C,GAA+C,GAA/C,GAAqD,CAHtD,CADF;AAKA,UAAIO,cAAc,GAAG;AAAEC,QAAAA,UAAU,EAAE,IAAd;AAAoBC,QAAAA;AAApB,OAArB;AACA,aAAO,EAAE,GAAGE,KAAL;AAAYJ,QAAAA;AAAZ,OAAP;;AACF,SAAKV,OAAO,CAACyB,kBAAb;AAAiC;AAC/B,YAAIf,cAAc,GAAG;AAAEC,UAAAA,UAAU,EAAE,KAAd;AAAqBC,UAAAA,WAAW,EAAE;AAAlC,SAArB;AACA,eAAO,EAAE,GAAGE,KAAL;AAAYJ,UAAAA;AAAZ,SAAP;AACD;;AACD;AACE,aAAOI,KAAP;AA3BJ;AA6BD,CA9BM","sourcesContent":["import { ACTIONS } from \"./constans\";\n\nconst defaultState = {\n  userDataForPaymentCost: {\n    dayOfWeek: \"\",\n    distance: \"\",\n    hasEquip: null,\n  },\n  dbDataForPaymentCost: {\n    cost: 0,\n    road: 0,\n    withEquip: null,\n  },\n  dataForPayment: {\n    wasPayment: false,\n    finallyCost: 0,\n  },\n};\n\nexport const costReducer = (state = defaultState, action) => {\n  switch (action.type) {\n    case ACTIONS.GET_DATA_USERS_COST:\n      let userDataForPaymentCost = {\n        dayOfWeek: action.costData.dayOfWeek,\n        distance: +action.costData.distance,\n        hasEquip: action.costData.hasEquip,\n      };\n      return { ...state, userDataForPaymentCost };\n    case ACTIONS.GET_DATA_DB_COST:\n      return { ...state, dbDataForPaymentCost: action.paymentCostDb };\n    case ACTIONS.PAYMENT_BAND_COST:\n      return { ...state };\n    case ACTIONS.SET_BAND_COST:\n      let db = state.dbDataForPaymentCost;\n      let user = state.userDataForPaymentCost;\n      let finallyCost =\n        db.cost +\n        user.distance * db.road +\n        (!user.hasEquip ? db.withEquip : 0) +\n        (user.dayOfWeek === 5 || user.dayOfWeek === 6 ? 100 : 0);\n      let dataForPayment = { wasPayment: true, finallyCost };\n      return { ...state, dataForPayment };\n    case ACTIONS.CHANGE_WAS_PAYMENT: {\n      let dataForPayment = { wasPayment: false, finallyCost: 0 };\n      return { ...state, dataForPayment };\n    }\n    default:\n      return state;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}