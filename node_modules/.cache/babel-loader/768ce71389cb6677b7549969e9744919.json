{"ast":null,"code":"var _jsxFileName = \"D:\\\\GIT\\\\Diploma_TMS\\\\src\\\\components\\\\Media\\\\Media.jsx\",\n    _s = $RefreshSig$();\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Mask } from \"../../common/style\";\nimport { ACTIONS } from \"../../redux/reducers/constans\";\nimport { Modal } from \"./Modal\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Media = () => {\n  _s();\n\n  const state = useSelector(state => state.mediaReducer);\n  const dispatch = useDispatch();\n\n  const openModal = e => {\n    dispatch({\n      type: ACTIONS.OPEN_MODAL,\n      id: e.target.id\n    });\n  };\n\n  const closeModal = () => {\n    dispatch({\n      type: ACTIONS.CLOSE_MODAL\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Wrapper, {\n    children: [state.isModal && /*#__PURE__*/_jsxDEV(Modal, {\n      img: state.imgForModal,\n      closeModal: closeModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Images, {\n      children: state.wideImg.map((el, i) => /*#__PURE__*/_jsxDEV(\"img\", {\n        id: i,\n        src: process.env.PUBLIC_URL + el.link,\n        style: el.styleWideImg,\n        onClick: openModal\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Media, \"lAwOUIsiQt7W5pDkNmeY6/8xQ4s=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Media;\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n`;\n_c2 = Wrapper;\nconst Images = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n_c3 = Images;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Media\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Images\");","map":{"version":3,"sources":["D:/GIT/Diploma_TMS/src/components/Media/Media.jsx"],"names":["useDispatch","useSelector","styled","Mask","ACTIONS","Modal","Media","state","mediaReducer","dispatch","openModal","e","type","OPEN_MODAL","id","target","closeModal","CLOSE_MODAL","isModal","imgForModal","wideImg","map","el","i","process","env","PUBLIC_URL","link","styleWideImg","Wrapper","div","Images"],"mappings":";;;AAAA,SAASA,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,IAAT,QAAqB,oBAArB;AACA,SAASC,OAAT,QAAwB,+BAAxB;AACA,SAASC,KAAT,QAAsB,SAAtB;;AAEA,OAAO,MAAMC,KAAK,GAAG,MAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGN,WAAW,CAAEM,KAAD,IAAWA,KAAK,CAACC,YAAlB,CAAzB;AACA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AACA,QAAMU,SAAS,GAAIC,CAAD,IAAO;AACvBF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,OAAO,CAACS,UAAhB;AAA4BC,MAAAA,EAAE,EAAEH,CAAC,CAACI,MAAF,CAASD;AAAzC,KAAD,CAAR;AACD,GAFD;;AAGA,QAAME,UAAU,GAAG,MAAM;AACvBP,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,OAAO,CAACa;AAAhB,KAAD,CAAR;AACD,GAFD;;AAGA,sBACE,QAAC,OAAD;AAAA,eACGV,KAAK,CAACW,OAAN,iBACC,QAAC,KAAD;AAAO,MAAA,GAAG,EAAEX,KAAK,CAACY,WAAlB;AAA+B,MAAA,UAAU,EAAEH;AAA3C;AAAA;AAAA;AAAA;AAAA,YAFJ,eAIE,QAAC,MAAD;AAAA,gBACGT,KAAK,CAACa,OAAN,CAAcC,GAAd,CAAkB,CAACC,EAAD,EAAKC,CAAL,kBACjB;AACE,QAAA,EAAE,EAAEA,CADN;AAEE,QAAA,GAAG,EAAEC,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBJ,EAAE,CAACK,IAFnC;AAGE,QAAA,KAAK,EAAEL,EAAE,CAACM,YAHZ;AAKE,QAAA,OAAO,EAAElB;AALX,SAIOa,CAJP;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkBD,CA3BM;;GAAMjB,K;UACGL,W,EACGD,W;;;KAFNM,K;AA6Bb,MAAMuB,OAAO,GAAG3B,MAAM,CAAC4B,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAMD,O;AAMN,MAAME,MAAM,GAAG7B,MAAM,CAAC4B,GAAI;AAC1B;AACA;AACA,CAHA;MAAMC,M","sourcesContent":["import { useDispatch, useSelector } from \"react-redux\";\nimport styled from \"styled-components\";\nimport { Mask } from \"../../common/style\";\nimport { ACTIONS } from \"../../redux/reducers/constans\";\nimport { Modal } from \"./Modal\";\n\nexport const Media = () => {\n  const state = useSelector((state) => state.mediaReducer);\n  const dispatch = useDispatch();\n  const openModal = (e) => {\n    dispatch({ type: ACTIONS.OPEN_MODAL, id: e.target.id });\n  };\n  const closeModal = () => {\n    dispatch({ type: ACTIONS.CLOSE_MODAL });\n  };\n  return (\n    <Wrapper>\n      {state.isModal && (\n        <Modal img={state.imgForModal} closeModal={closeModal} />\n      )}\n      <Images>\n        {state.wideImg.map((el, i) => (\n          <img\n            id={i}\n            src={process.env.PUBLIC_URL + el.link}\n            style={el.styleWideImg}\n            key={i}\n            onClick={openModal}\n          />\n        ))}\n      </Images>\n    </Wrapper>\n  );\n};\n\nconst Wrapper = styled.div`\n  width: 100%;\n  height: 100%;\n  background-color: black;\n`;\n\nconst Images = styled.div`\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n`;\n"]},"metadata":{},"sourceType":"module"}